<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pt1002.modules.mapper.DeviceBlackMapper" >
  <resultMap id="BaseResultMap" type="com.pt1002.modules.pojo.DeviceBlack" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="device_id" property="deviceId" jdbcType="INTEGER" />
    <result column="black_id" property="blackId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, device_id, black_id, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pt1002.modules.pojo.DeviceBlackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_black
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from device_black
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from device_black
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pt1002.modules.pojo.DeviceBlackExample" >
    delete from device_black
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pt1002.modules.pojo.DeviceBlack" >
    insert into device_black (id, device_id, black_id, 
      state)
    values (#{id,jdbcType=INTEGER}, #{deviceId,jdbcType=INTEGER}, #{blackId,jdbcType=INTEGER}, 
      #{state,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pt1002.modules.pojo.DeviceBlack" >
    insert into device_black
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="blackId != null" >
        black_id,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="blackId != null" >
        #{blackId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pt1002.modules.pojo.DeviceBlackExample" resultType="java.lang.Integer" >
    select count(*) from device_black
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update device_black
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null" >
        device_id = #{record.deviceId,jdbcType=INTEGER},
      </if>
      <if test="record.blackId != null" >
        black_id = #{record.blackId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update device_black
    set id = #{record.id,jdbcType=INTEGER},
      device_id = #{record.deviceId,jdbcType=INTEGER},
      black_id = #{record.blackId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pt1002.modules.pojo.DeviceBlack" >
    update device_black
    <set >
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="blackId != null" >
        black_id = #{blackId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pt1002.modules.pojo.DeviceBlack" >
    update device_black
    set device_id = #{deviceId,jdbcType=INTEGER},
      black_id = #{blackId,jdbcType=INTEGER},
      state = #{state,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--custom-->
  <resultMap id="DeviceBlackDTO" type="com.pt1002.modules.pojo.DeviceBlackDTO">
    <id column="id" jdbcType="INTEGER" property="id"></id>
    <result column="black_id" jdbcType="INTEGER" property="blackId"></result>
    <result column="name" jdbcType="VARCHAR" property="name"></result>
    <result column="idcard" jdbcType="VARCHAR" property="idcard"></result>
    <result column="remark" jdbcType="VARCHAR" property="remark"></result>
    <result column="device_name" jdbcType="VARCHAR" property="deviceName"></result>
    <result column="device_sn" jdbcType="VARCHAR" property="deviceSn"></result>
  </resultMap>
  <sql id="Device_Black_Where_Colum">
      <if test="name!=null">
        and b.name like concat(concat('%',#{name}),'%')
      </if>
      <if test="idcard!=null">
        and b.idcard like concat(concat('%',#{idcard}),'%')
      </if>
      <if test="deviceId!=null">
        and d.id = #{deviceId}
      </if>
  </sql>
  
  <select id="selectDeivceBlackByCondition" resultMap="DeviceBlackDTO">
    SELECT C.ID,B.ID BLACK_ID, B.NAME ,B.IDCARD, B.REMARK,D.NAME AS DEVICE_NAME ,D.SN AS DEVICE_SN
    FROM (BLACK_LIST B INNER JOIN DEVICE_BLACK C ON B.ID=C.BLACK_ID) INNER JOIN DEVICES D ON C.DEVICE_ID = D.ID WHERE STATE != 3
    <include refid="Device_Black_Where_Colum"/>
  </select>

  <select id="selectBySn" resultType="com.pt1002.modules.pojo.PersonDTO">
      SELECT B.NAME,B.IDCARD as identityCard
        FROM
      (BLACK_LIST B INNER JOIN DEVICE_BLACK C ON B.ID=C.BLACK_ID) INNER JOIN DEVICES D ON C.DEVICE_ID = D.ID
        WHERE
        D.SN=#{sn}
  </select>
  
</mapper>