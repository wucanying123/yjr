<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pt1002.modules.mapper.CertificationRecordMapper">
    <resultMap id="BaseResultMap" type="com.pt1002.modules.pojo.CertificationRecord">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="identity_id" property="identityId" jdbcType="BIGINT"/>
        <result column="devices_id" property="devicesId" jdbcType="BIGINT"/>
        <result column="scene_path" property="scenePath" jdbcType="VARCHAR"/>
        <result column="picture_path" property="picturePath" jdbcType="VARCHAR"/>
        <result column="score" property="score" jdbcType="REAL"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="proveValue" property="provevalue" jdbcType="VARCHAR"/>
        <result column="proveSuccessful" property="provesuccessful" jdbcType="TINYINT"/>
        <result column="collectSuccessful" property="collectsuccessful" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, identity_id, devices_id, scene_path, picture_path, score, remark, create_time, 
    proveValue, proveSuccessful, collectSuccessful
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.pt1002.modules.pojo.CertificationRecordExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from certification_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from certification_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from certification_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.pt1002.modules.pojo.CertificationRecordExample">
        delete from certification_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.pt1002.modules.pojo.CertificationRecord">
    insert into certification_record (id, identity_id, devices_id, 
      scene_path, picture_path, score, 
      remark, create_time, proveValue, 
      proveSuccessful, collectSuccessful )
    values (#{id,jdbcType=BIGINT}, #{identityId,jdbcType=BIGINT}, #{devicesId,jdbcType=BIGINT}, 
      #{scenePath,jdbcType=VARCHAR}, #{picturePath,jdbcType=VARCHAR}, #{score,jdbcType=REAL}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{provevalue,jdbcType=VARCHAR}, 
      #{provesuccessful,jdbcType=TINYINT}, #{collectsuccessful,jdbcType=TINYINT} )
  </insert>
    <insert id="insertSelective" parameterType="com.pt1002.modules.pojo.CertificationRecord" useGeneratedKeys="true" keyProperty="id">
        insert into certification_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="identityId != null">
                identity_id,
            </if>
            <if test="devicesId != null">
                devices_id,
            </if>
            <if test="scenePath != null">
                scene_path,
            </if>
            <if test="picturePath != null">
                picture_path,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="provevalue != null">
                proveValue,
            </if>
            <if test="provesuccessful != null">
                proveSuccessful,
            </if>
            <if test="collectsuccessful != null">
                collectSuccessful,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="identityId != null">
                #{identityId,jdbcType=BIGINT},
            </if>
            <if test="devicesId != null">
                #{devicesId,jdbcType=BIGINT},
            </if>
            <if test="scenePath != null">
                #{scenePath,jdbcType=VARCHAR},
            </if>
            <if test="picturePath != null">
                #{picturePath,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=REAL},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="provevalue != null">
                #{provevalue,jdbcType=VARCHAR},
            </if>
            <if test="provesuccessful != null">
                #{provesuccessful,jdbcType=TINYINT},
            </if>
            <if test="collectsuccessful != null">
                #{collectsuccessful,jdbcType=TINYINT},
            </if>

        </trim>
    </insert>
    <select id="countByExample" parameterType="com.pt1002.modules.pojo.CertificationRecordExample"
            resultType="java.lang.Integer">
        select count(*) from certification_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update certification_record
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.identityId != null">
                identity_id = #{record.identityId,jdbcType=BIGINT},
            </if>
            <if test="record.devicesId != null">
                devices_id = #{record.devicesId,jdbcType=BIGINT},
            </if>
            <if test="record.scenePath != null">
                scene_path = #{record.scenePath,jdbcType=VARCHAR},
            </if>
            <if test="record.picturePath != null">
                picture_path = #{record.picturePath,jdbcType=VARCHAR},
            </if>
            <if test="record.score != null">
                score = #{record.score,jdbcType=REAL},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.provevalue != null">
                proveValue = #{record.provevalue,jdbcType=VARCHAR},
            </if>
            <if test="record.provesuccessful != null">
                proveSuccessful = #{record.provesuccessful,jdbcType=TINYINT},
            </if>
            <if test="record.collectsuccessful != null">
                collectSuccessful = #{record.collectsuccessful,jdbcType=TINYINT},
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update certification_record
        set id = #{record.id,jdbcType=BIGINT},
        identity_id = #{record.identityId,jdbcType=BIGINT},
        devices_id = #{record.devicesId,jdbcType=BIGINT},
        scene_path = #{record.scenePath,jdbcType=VARCHAR},
        picture_path = #{record.picturePath,jdbcType=VARCHAR},
        score = #{record.score,jdbcType=REAL},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        proveValue = #{record.provevalue,jdbcType=VARCHAR},
        proveSuccessful = #{record.provesuccessful,jdbcType=TINYINT},
        collectSuccessful = #{record.collectsuccessful,jdbcType=TINYINT}

        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pt1002.modules.pojo.CertificationRecord">
        update certification_record
        <set>
            <if test="identityId != null">
                identity_id = #{identityId,jdbcType=BIGINT},
            </if>
            <if test="devicesId != null">
                devices_id = #{devicesId,jdbcType=BIGINT},
            </if>
            <if test="scenePath != null">
                scene_path = #{scenePath,jdbcType=VARCHAR},
            </if>
            <if test="picturePath != null">
                picture_path = #{picturePath,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=REAL},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="provevalue != null">
                proveValue = #{provevalue,jdbcType=VARCHAR},
            </if>
            <if test="provesuccessful != null">
                proveSuccessful = #{provesuccessful,jdbcType=TINYINT},
            </if>
            <if test="collectsuccessful != null">
                collectSuccessful = #{collectsuccessful,jdbcType=TINYINT},
            </if>

        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pt1002.modules.pojo.CertificationRecord">
    update certification_record
    set identity_id = #{identityId,jdbcType=BIGINT},
      devices_id = #{devicesId,jdbcType=BIGINT},
      scene_path = #{scenePath,jdbcType=VARCHAR},
      picture_path = #{picturePath,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      proveValue = #{provevalue,jdbcType=VARCHAR},
      proveSuccessful = #{provesuccessful,jdbcType=TINYINT},
      collectSuccessful = #{collectsuccessful,jdbcType=TINYINT}

    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByIdentity" parameterType="Long" resultMap="BaseResultMap">
    SELECT * from  certification_record WHERE  identity_id=#{identityId,jdbcType=BIGINT}
  </select>
    <select id="selectByDevicesId" parameterType="Integer" resultMap="BaseResultMap">
    SELECT * from  certification_record WHERE  devices_id=#{devicesId,jdbcType=INTEGER}
  </select>
    <delete id="deleteByIdentityId" parameterType="long">
    DELETE  from certification_record WHERE identity_id=#{identityId,jdbcType=BIGINT}
  </delete>
</mapper>